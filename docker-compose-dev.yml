version: "3.9"

services:
  # A customized instance of collectivo for HERMES.
  collectivo:
    restart: always
    build: ./collectivo
    volumes:
      - ../collectivo/collectivo_app:/collectivo_app
      - ../collectivo/collectivo:/collectivo_app/collectivo
      - ./collectivo/collectivo-dev.yml:/collectivo_app/collectivo.yml
      - ./collectivo/extensions/hermes:/collectivo_app/hermes
      - ./uploads:/collectivo_app/media_root/
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      DB_HOST: collectivo-db
      DB_NAME: collectivo_db
      DB_USER: ${COLLECTIVO_DB_USER}
      DB_PASS: ${COLLECTIVO_DB_PASSWORD}
      SECRET_KEY: ${COLLECTIVO_SECRET_KEY}
      ALLOWED_HOSTS: ${COLLECTIVO_URL}
      ALLOWED_ORIGINS: ${COLLECTIVO_UX_URL}
      KEYCLOAK_URL: ${KEYCLOAK_URL}
      KEYCLOAK_CLIENT_SECRET: ${COLLECTIVO_KEYCLOAK_CLIENT_SECRET}
      CELERY_BROKER: ${REDIS_URL}
      CELERY_BACKEND: ${REDIS_URL}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS}
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      ADMIN_USER: ${COLLECTIVO_ADMIN_USER}
      ADMIN_PASS: ${COLLECTIVO_ADMIN_PASS}
    depends_on:
      collectivo-db:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    ports:
      - "8000:8000"

  # A celery worker that runs in the background.
  # Image & environment should be the same as collectivo-mila.
  celery:
    restart: always
    command: celery -A collectivo_app worker -l info
    build: ./collectivo
    volumes:
      - ../collectivo/collectivo_app:/collectivo_app
      - ../collectivo/collectivo:/collectivo_app/collectivo
      - ./collectivo/collectivo-dev.yml:/collectivo_app/collectivo.yml
      - ./collectivo/extensions/hermes:/collectivo_app/hermes
    environment:
      DB_HOST: collectivo-db
      DB_NAME: collectivo_db
      DB_USER: ${COLLECTIVO_DB_USER}
      DB_PASS: ${COLLECTIVO_DB_PASSWORD}
      SECRET_KEY: ${COLLECTIVO_SECRET_KEY}
      ALLOWED_HOSTS: ${COLLECTIVO_URL}
      ALLOWED_ORIGINS: ${COLLECTIVO_UX_URL}
      KEYCLOAK_URL: ${KEYCLOAK_URL}
      KEYCLOAK_CLIENT_SECRET: ${COLLECTIVO_KEYCLOAK_CLIENT_SECRET}
      CELERY_BROKER: ${REDIS_URL}
      CELERY_BACKEND: ${REDIS_URL}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS}
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
    depends_on:
      collectivo-db:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_healthy

  # A celery worker that runs scheduled tasks in the background.
  # Image & environment should be the same as collectivo-mila.
  celery-beat:
    restart: always
    command: celery -A collectivo_app beat -l info
    build: ./collectivo
    volumes:
      - ../collectivo/collectivo_app:/collectivo_app
      - ../collectivo/collectivo:/collectivo_app/collectivo
      - ./collectivo/collectivo-dev.yml:/collectivo_app/collectivo.yml
      - ./collectivo/extensions/hermes:/collectivo_app/hermes
    environment:
      DB_HOST: collectivo-db
      DB_NAME: collectivo_db
      DB_USER: ${COLLECTIVO_DB_USER}
      DB_PASS: ${COLLECTIVO_DB_PASSWORD}
      SECRET_KEY: ${COLLECTIVO_SECRET_KEY}
      ALLOWED_HOSTS: ${COLLECTIVO_URL}
      ALLOWED_ORIGINS: ${COLLECTIVO_UX_URL}
      KEYCLOAK_URL: ${KEYCLOAK_URL}
      KEYCLOAK_CLIENT_SECRET: ${COLLECTIVO_KEYCLOAK_CLIENT_SECRET}
      CELERY_BROKER: ${REDIS_URL}
      CELERY_BACKEND: ${REDIS_URL}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS}
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
    depends_on:
      collectivo-db:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_healthy

  # A communication broker for celery.
  redis:
    container_name: name
    image: redis:7.0-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    command: >
      --requirepass "${REDIS_PASSWORD}" --appendonly yes --maxmemory 1000mb
      --maxmemory-policy volatile-lru

  # A PostgreSQL database.
  collectivo-db:
    image: postgres:14-alpine
    volumes:
      - collectivo-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: collectivo_db
      POSTGRES_USER: ${COLLECTIVO_DB_USER}
      POSTGRES_PASSWORD: ${COLLECTIVO_DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Frontend for collectivo.
  collectivo-ux:
    image: milawien/collectivo-ux:latest
    restart: always
    environment:
      VITE_API_URL: ${COLLECTIVO_URL}
      VITE_KEYCLOAK_URL: ${KEYCLOAK_URL}
    ports:
      - "8001:80"
      # - "5173:5173"

  # Keycloak for authentication.
  keycloak:
    build: ./docker/keycloak-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      ROOT_LOGLEVEL: ALL
      KEYCLOAK_LOGLEVEL: DEBUG
      KC_HOSTNAME: ${KEYCLOAK_URL_BASE}
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://127.0.0.1:8080/realms/master"]
      interval: 5s
      timeout: 2s
      retries: 15
    volumes:
      - ./docker/keycloak/import:/opt/keycloak/data/import:ro
      - ./docker/keycloak/export:/tmp/export
      - ./docker/keycloak/healthcheck.sh:/healthcheck.sh
    ports:
      - "8080:8080"

  # For Documentation development
volumes:
  collectivo-db-data:
